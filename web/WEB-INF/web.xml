<?xml version="1.0" encoding="GBK"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  
  <display-name>Spring JPetStore</display-name>
  
  <description>Spring JPetStore sample application</description>
  
  <!--
	  - Key of the system property that should specify the root directory of this
	  - web app. Applied by WebAppRootListener or Log4jConfigListener.
          在运行时，会将 ${petstore.root} 替代为部署时上下文的绝对路径，
          比如，如果上下文为 /hjpetstore , 那么转换的路径为 $Tomcat/webapps/hjpetstore,
          因此这样就避免了写绝对路径在程序当中，达到位置机动性。rock!
	  -->
  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>petstore.root</param-value>
  </context-param>
  
  <!--
    - Location of the Log4J config file, for initialization and refresh checks.
    - Applied by Log4jConfigListener.
  -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/log4j.properties</param-value>
  </context-param>
  
  
  <!--
    - Location of the XML file that defines the root application context.
    - Applied by ContextLoaderServlet.
    -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <!-- local datasource -->
    <param-value>
      /WEB-INF/dataAccessContext-hibernate.xml /WEB-INF/applicationContext.xml
    </param-value>
    
    
    <!-- jndi datasource and JTA (for a transactional JNDI DataSource) 
    <param-value>
      /WEB-INF/dataAccessContext-hibernate-jndi.xml /WEB-INF/applicationContext.xml
    </param-value>
    -->
  </context-param>
  
  <!--
     - 以下只对 JBoss服务器要将其注释掉，因为JBoss 自己实现了一套 LOG 程序.
    - For JBoss: Avoid to setup Log4J outside $JBOSS_HOME/server/default/deploy/log4j.xml!
    - So, must comment the Log4J listener out (in web.xml)
    - For all other servers: un-comment (not comment) the Log4J listener in web.xml 
    - to activate Log4J.
    －
    - Configures Log4J for this web app.
    - As this context specifies a context-param "log4jConfigLocation", its file path
    - is used to load the Log4J configuration, including periodic refresh checks.
    -
    - Would fall back to default Log4J initialization (non-refreshing) if no special
    - context-params are given.
    -
    - Exports a "web app root key", i.e. a system property that specifies the root
    - directory of this web app, for usage in log file paths.
    - This web app specifies "petstore.root" (see log4j.properties file).
    -->
  <!-- -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  
  <!--
    - Loads the root application context of this web app at startup,
    - by default from "/WEB-INF/applicationContext.xml".
          - Note that you need to fall back to Spring's ContextLoaderServlet for
          - J2EE servers that do not follow the Servlet 2.4 initialization order.
          -
    - Use WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext);
    - to access it anywhere in the web application, outside of the framework.
    -
    - The root context is the parent of all servlet-specific contexts.
    - This means that its beans are automatically available in these child contexts,
    - both for getBean(name) calls and (external) bean references.
    -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!--
    - Struts servlet that dispatches requests to registered actions.
      - Reads its configuration from "struts-config.xml".
      -
      - A web app can just contain one such servlet.
      - If you need multiple namespaces, use Struts' module mechanism.
    -->
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <!--
    - Dispatcher servlet mapping for the main web user interface.
    - refering to "action" for the Struts dispatcher.
    -->
  <!-- Struts web -->	
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!--  must using servlet 2.4, so currently not worked 
  <error-page>
    <exception-type>java.lang.Exception</exception-type>
    <location>/WEB-INF/jsp/uncaughtException.jsp</location>
  </error-page>
  -->
  
  <!-- JBoss don't need below settings -->
 
  <!-- mysql or oracle 
    - Only needed for JTA (dataAccessContext-jta-1.xml or 
    - dataAccessContext-jta.xml - Reference to main database.).
  -->
  <resource-ref>
    <res-ref-name>jdbc/hjpetstore</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
  
</web-app>
